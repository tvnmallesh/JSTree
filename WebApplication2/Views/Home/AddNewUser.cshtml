@model mbtTool.Models.AddUserModel
@{
    ViewBag.Title = "Add New User(Admin Console)";
    Layout = "";
}

<head>

    <title>NExtgen Testing Tool</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/jquery.mCustomScrollbar.min.css">
    <link rel="stylesheet" href="~/Content/style.css">
    @*<link rel ="stylesheet" href="~/Content/bootstrap-datepicker.css"/>*@

    <script src="~/Scripts/jquery-1.11.0.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/tcasetable.custom.js"></script>
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.date.js")" type="text/javascript"></script>

    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
</head>

<style>
    .frmAddNew {
        background-image: url("../Content/Images/img.png");
        background-repeat: no-repeat;
        background-size: cover;
        height: 85%;
        /*width: 100%;
        padding: 10px;*/
    }

    *[role="form"] {
        max-width: 530px;
        padding: 15px;
        margin: 0 auto;
        border-radius: 0.3em;
        background-color: #f2f2f2;
        height:100% !important;
    }

        *[role="form"] h2 {
            font-family: 'Open Sans', sans-serif;
            font-size: 30px;
            font-weight: 600;
            color: #000000;
            margin: 0px;
            margin-bottom: 10px;
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 4px;
        }

    .glyphicon {
        padding-bottom:4px;
    }
</style>

<body>
    <nav class="navbar navbar-inverse">
        <ul class="navinlineblock" style="width:100%;margin-bottom:0px;padding-bottom:0px;">
            <li class="navbar-left"><a href="#"><img src="~/Content/Images/nxtgen_logo@3x.png" alt="ITC-Image" /></a></li>
            <li class="text-center centertext">TEST CASE GENERATION TOOL</li>
            @*<h2>Welcome: @ViewBag.ClaimsIdentity.Name</h2>*@
            <li class="navbar-right">
                <a href="#"><img src="~/Content/Images/ITCinfotech_logo@3x.png" style="height:46px;" alt="ITC-Image" /></a>@*<li class="navbar-right"><div style="font-size:14px; width:40px;">Welcome <br />@ViewBag.Fname</div></li>*@
            <li class="navbar-right">
                <div class="drpdown" style="font-size:14px; width:40px;">
                    <div onclick="myFunction()" class="drpbtn">Welcome <br />Admin</div>
                    <div id="logDropdown" class="drpdown-content">
                        <button id="lnkLogout" style="background:transparent;border:none;padding:8px;" onclick="window.location.href = 'logout';">Logout</button>
                    </div>
                </div>
            </li>

        </ul>
    </nav>







    <div class="frmAddNew">
        <div class="frmButtons form-horizontal form" role="form" style="height:90%;padding: 150px 15px 150px;display:none;">
            <input id="addUser" type="button" value="Add User" class="btn btn-danger btn-block" /><br />
            <input id="UpdateUser" type="button" value="Update User" class="btn btn-warning btn-block" /><br />
            <input id="addComp" type="button" value="Add Company" class="btn btn-primary btn-block" /><br />
            <input id="renComp" type="button" value="Renew Company License" class="btn compilebtn btn-block" /><br />

        </div> <!-- ./container -->


        <div class="frmAddNewCompany form" style="display:none;">
            @using (Html.BeginForm("SaveCompany", "Home", FormMethod.Post, new { id = "frmSaveCompany", @class = "form-horizontal", @role = "form" }))
            {
                @Html.AntiForgeryToken(); // this is for prevent CSRF attack
                @Html.ValidationSummary(true)
                <a onclick="fnback()"><img style="width:20px;" class="closebtn" src="~/Content/Images/back.png" /></a>


                <h2>New License Company</h2>
                <h5 style="text-align:center;">All the below fields are mandatory.</h5>
                if (@ViewBag.Message != null)
                {
                    <div id="popupdivComp" class="pop" style="color: red;font-weight:bold;text-align:center;">
                        @ViewBag.Message
                    </div>
                }

                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Company @Html.ValidationMessageFor(m => m.cmpL.Company, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.Company, new { autocomplete = "off", @class = "form-control", placeholder = "Company", onkeypress = "checkSpcl(event)", autofocus = "" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Number of Users per License @Html.ValidationMessageFor(m => m.cmpL.NumberOfUsersPerLicense, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.NumberOfUsersPerLicense, new { autocomplete = "off", @class = "form-control", placeholder = "Number of Users", onkeypress = "checkSpcl(event)" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="stDate" class="col-sm-3 control-label">Start Date @Html.ValidationMessageFor(m => m.cmpL.StartDate, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.StartDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker", @placeholder = "DD/MM/YYYY" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="endDate" class="col-sm-3 control-label">End Date @Html.ValidationMessageFor(m => m.cmpL.EndDate, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.EndDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker2", @placeholder = "DD/MM/YYYY" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12" style="text-align:center;">
                        <input id="submit" type="submit" value="Add New Company" class="btn btn-primary" />

                        <input id="clear" type="button" value="Clear" class="btn btn-warning" onclick="resetfrmComp()" />
                    </div>
                </div>
            }
        </div> <!-- ./container -->

        <div class="frmAddNewUsertoComp form" style="display:none;">
            @using (Html.BeginForm("SaveUser", "Home", FormMethod.Post, new { id = "frmSaveUser", @class = "form-horizontal", @role = "form" }))
            {
                @Html.AntiForgeryToken(); // this is for prevent CSRF attack
                @Html.ValidationSummary(true)

                <a onclick="fnback()"><img style="width:20px;" class="closebtn" src="~/Content/Images/back.png" /></a>
                <h2>New User Console</h2>
                <h5 style="text-align:center;">All the below fields are mandatory.</h5>
                if (@ViewBag.Message != null)
                {
                    <div id="popupdivUser" class="pop" style="color: red;font-weight:bold;text-align:center;">
                        @ViewBag.Message
                    </div>
                }
                <div class="form-group">
                    <label for="firstName" class="col-sm-3 control-label">First Name @Html.ValidationMessageFor(m => m.lgninfo.FirstName, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.lgninfo.FirstName, new { autocomplete = "off", @class = "form-control", placeholder = "First Name", onkeypress = "checkSpcl(event)", autofocus = "" })

                    </div>
                </div>
                <div class="form-group">
                    <label for="lastName" class="col-sm-3 control-label">Last Name @Html.ValidationMessageFor(m => m.lgninfo.LastName, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.lgninfo.LastName, new { autocomplete = "off", @class = "form-control", placeholder = "Last Name", onkeypress = "checkSpcl(event)" })

                    </div>
                </div>
                <div class="form-group">
                    <label for="userid" class="col-sm-3 control-label">User Id @Html.ValidationMessageFor(m => m.lgninfo.UserId, "*", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.lgninfo.UserId, new { autocomplete = "off", @id = "txtUserId", @class = "form-control", placeholder = "User Id", onkeypress = "checkSpcl(event)" })

                    </div>
                </div>
                <div class="form-group">
                    <label for="password" class="col-sm-3 control-label">Password  @Html.ValidationMessageFor(m => m.lgninfo.Password, "*", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.lgninfo.Password, new { autocomplete = "off", @class = "form-control", placeholder = "Password", onkeypress = "checkSpcl(event)" })

                    </div>
                </div>
                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Company @Html.ValidationMessageFor(m => m.lgninfo.Company, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.lgninfo.Company, ViewData["Companies"] as SelectList, new { id = "drpCompanies", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="role" class="col-sm-3 control-label">Role @Html.ValidationMessageFor(m => m.lgninfo.Role, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">

                        @Html.DropDownListFor(m => m.lgninfo.Role, new SelectList(new List<Object> { new { value = "Designer", text = "Designer" }@*, new { value = "Admin", text = "Admin" }*@ }, "value", "text"), new { @class = "form-control" })
                    </div>
                </div>
                @*<div class="form-group">
                        <label for="stDate" class="col-sm-3 control-label">Start Date @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "redtext" })</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker", @placeholder = "DD/MM/YYYY" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="endDate" class="col-sm-3 control-label">End Date @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "redtext" })</label>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker2", @placeholder = "DD/MM/YYYY" })
                        </div>
                    </div>*@
                <div class="form-group">
                    <div class="col-sm-12" style="text-align:center;">
                        <input id="submit" type="submit" value="Add User" class="btn btn-primary" />
                        <input id="clear" type="button" value="Clear" class="btn btn-warning" onclick="resetfrmUser()" />
                    </div>
                </div>
            }
        </div>



        <div class="frmRenewCompany form" style="display:none;">
            @using (Html.BeginForm("RenewCompany", "Home", FormMethod.Post, new { id = "frmRenewCompany", @class = "form-horizontal", @role = "form" }))
            {
                @Html.AntiForgeryToken(); // this is for prevent CSRF attack
                @Html.ValidationSummary(true)
                <a onclick="fnback()"><img style="width:20px;" class="closebtn" src="~/Content/Images/back.png" /></a>


                <h2>Renew Company License</h2>
                <h5 style="text-align:center;">All the below fields are mandatory.</h5>
                if (@ViewBag.Message != null)
                {
                    <div id="popupdivRen" class="pop" style="color: red;font-weight:bold;text-align:center;">
                        @ViewBag.Message
                    </div>
                }

                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Company @Html.ValidationMessageFor(m => m.cmpL.Company, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.cmpL.Company, ViewData["Companies"] as SelectList, new { id = "RenDrpCompanies", @class = "form-control", onchange = "fnChangeComp(this)" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Number of Users per License @Html.ValidationMessageFor(m => m.cmpL.NumberOfUsersPerLicense, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.NumberOfUsersPerLicense, new { autocomplete = "off", @class = "form-control", placeholder = "Number of Users", onkeypress = "checkSpcl(event)", id = "RenNoOfLicense" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="stDate" class="col-sm-3 control-label">Start Date @Html.ValidationMessageFor(m => m.cmpL.StartDate, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.StartDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker3", @placeholder = "DD/MM/YYYY" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="endDate" class="col-sm-3 control-label">End Date @Html.ValidationMessageFor(m => m.cmpL.EndDate, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.cmpL.EndDate, new { @class = "form-control date", autocomplete = "off", @id = "datetimepicker4", @placeholder = "DD/MM/YYYY" })
                    </div>
                </div>

                <input id="RenewLicense" type="submit" value="Renew Company License" class="btn btn-primary btn-block" @*onclick="ValidateRenew(event)"*@ />
            }
        </div> <!-- ./container -->


        <div class="frmEditDeleteUser form" style="display:none;">
            @using (Html.BeginForm("EditDeleteUser", "Home", FormMethod.Post, new { id = "frmEditDelete", @class = "form-horizontal", @role = "form" }))
            {
                @Html.AntiForgeryToken(); // this is for prevent CSRF attack
                @Html.ValidationSummary(true)
                <a onclick="fnback()"><img style="width:20px;" class="closebtn" src="~/Content/Images/back.png" /></a>


                <h2>Edit/Delete Users</h2>
                <h5 style="text-align:center;">All the below fields are mandatory.</h5>
                if (@ViewBag.Message != null)
                {
                    <div id="popupdivRen" class="pop" style="color: red;font-weight:bold;text-align:center;">
                        @ViewBag.Message
                    </div>
                }

                <div class="form-group">
                    <label for="company" class="col-sm-3 control-label">Company @Html.ValidationMessageFor(m => m.cmpL.Company, "", new { @class = "redtext" })</label>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.cmpL.Company, ViewData["Companies"] as SelectList, new { id = "UpdDrpCompanies", @class = "form-control" })
                    </div>
                </div>
                <input id="btnSearch" type="button" value="Get Users" class="btn btn-primary btn-block" onclick="PopulateUsers()" /><br />

                <table id="UserDataTable" class="table table-striped table-bordered" style="width:100%;z-index:99999;display:none;">
                    <thead>

                        <tr>
                            <th>User Id</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Status</th>
                            <th>Edit</th>
                            @*<th>Delete</th>*@
                        </tr>
                    </thead>
                </table>
            }
        </div> <!-- ./container -->

    </div> <!-- ./container -->


    <div class="modal fade" id="EditUserInfo" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h5 class="modal-title">Edit Existing User Info</h5>
                </div>
                <div class="modal-body">
                    <h6>First Name</h6>
                    <input type="text" class="form-control nospclbtspce" id="txtFirstName" onkeyup="validateLength(this)" onpaste="return false;" maxlength="40" />
                    <h6>Last Name</h6>
                    <input type="text" class="form-control nospclbtspce" id="txtLastName" onpaste="return false;" />
                    <h6>Status</h6>
                    @*<input type="text" class="form-control nospclbtspce" id="txtStatus" onpaste="return false;"/>*@
                    @Html.DropDownList("txtStatus", new SelectList(new List<Object> { new { value = "Active", text = "Active" ,selected = true}, new { value = "InActive", text = "InActive" } }, "value", "text"), new { @class = "form-control" })
                </div>
                <div class="modal-footer footer-disabled">
                    <button id="UpdateUserInfo" type="button" class="btn btn-default" data-dismiss="modal" onclick="SaveUserInfo()">Save</button>                   
                </div>
            </div>

        </div>
    </div>

    <footer class="footeralign navbar-fixed-bottom">
        <div>&copy; 2018, ITC Infotech India Ltd. All rights reserved.</div>

    </footer>
</body>
<script>
    //$('#datetimepicker').datetimepicker('option', { dateFormat: 'yy-mm-dd' });
    $('input[id$=datetimepicker]').datepicker({
        dateFormat: 'dd/mm/yy'
    });
    $('input[id$=datetimepicker2]').datepicker({
        dateFormat: 'dd/mm/yy'
    });
    $('input[id$=datetimepicker3]').datepicker({
        dateFormat: 'dd/mm/yy'
    });
    $('input[id$=datetimepicker4]').datepicker({
        dateFormat: 'dd/mm/yy'
    });
    $("#ui-datepicker-div").hide();
    $.post("../Home/CheckSession", function (data) {
        var result = data;
        if (result == "false") {
            window.location.href = "/Home/Login";
        }
    });


    //This function is responsible for checking idle state of browser
    //and ending the session if browser is found to be idle for more than 10 mins
    function Session() { }

    Session.prototype.init = function () {
        console.log('inside Session.init()');

        //capturing all click, touch and keypress events
        if (window.addEventListener) {
            window.addEventListener('touchstart', Timeout, false);
            window.addEventListener('click', Timeout, false);
            window.addEventListener('keypress', Timeout, false);
        }
        else if (window.attachEvent) {
            window.attachEvent('touchstart', Timeout, false);
            window.attachEvent('click', Timeout, false);
            window.attachEvent('keypress', Timeout, false);
        }
        function _timeout() {
            return function () {
                alert('Session Timeout. You have been logged out.');
                //window.location.reload();
                window.location.href = "/Home/Logout/";
            }
        }

        function Timeout() {
            console.log('inside goTimeout()');
            if (typeof (timer) != 'undefined') {
                console.log("clearing timer");
                timer = clearTimeout(timer); //reset as soon as something is clicked
            }
            timer = setTimeout(_timeout(), 600000 /*test tiemout period in millisec*/);
        }
    }

    var sessionTimeout = new Session();
    sessionTimeout.init();


    $(document).ready(function () {

        if ("@ViewBag.Message" != "") {
            var message = "@ViewBag.Message";
            if (message.indexOf("Company") > -1) {
                $(".frmButtons").hide();
                $(".frmAddNewCompany").show();
                $(".frmAddNewUsertoComp").hide();
                $(".frmRenewCompany").hide();
            }
            else if (message.indexOf("User") > -1) {
                $(".frmButtons").hide();
                $(".frmAddNewCompany").hide();
                $(".frmAddNewUsertoComp").show();
                $(".frmRenewCompany").hide();
            }
            else if (message.indexOf("renew") > -1) {
                $(".frmButtons").hide();
                $(".frmAddNewCompany").hide();
                $(".frmAddNewUsertoComp").hide();
                $(".frmRenewCompany").show();
            }
        }
        else {
            $(".frmButtons").show();
        }
    });

    $("#addComp").on("click", function () {
        $(".pop").hide();
        $(".form").hide();
        $(".frmButtons").hide(); 
        $(".frmAddNewCompany").show();
    });

    $("#addUser").on("click", function () {
        $(".pop").hide();
        $(".form").hide();
        $(".frmButtons").hide(); 
        $(".frmAddNewUsertoComp").show();
    });

    $("#renComp").on("click", function () {
        $(".pop").hide();
        $(".form").hide();
        $(".frmButtons").hide(); 
        $(".frmRenewCompany").show();
    });

    $("#UpdateUser").on("click", function () {
        $("#UserDataTable").hide();
        $(".form").hide();
        $(".frmButtons").hide(); 
        $(".frmEditDeleteUser").show();
        $("#UpdDrpCompanies").val("---Please Select---");
        if ($.fn.DataTable.isDataTable('#UserDataTable')) {
            $('#UserDataTable').DataTable().destroy();
        }
    });

    function fnback() {
        $(".pop").hide();
        $(".form").hide();
        $(".frmButtons").show();        
        resetfrmUser();
        resetfrmComp();
        resetfrmRenew();
    }

    function resetfrmUser() {
        document.getElementById('frmSaveUser').reset();
        $("input[type=text], textarea").val("");
        //$('#frmSaveUser').trigger('reset');
    }
    function resetfrmComp() {
        document.getElementById('frmSaveCompany').reset();
        $("input[type=text], textarea").val("");
        //$('#frmSaveCompany').trigger('reset');
    }
    function resetfrmRenew() {
        document.getElementById('frmRenewCompany').reset();
        $("input[type=text], textarea").val("");
        $("#drpCompanies").val("---Please Select---");
    }  

    function fnChangeComp(obj) {
        //alert();
        if ($(obj).val() != "---Please Select---") {
            var url = getURL();
            $.ajax({
                url: url + "TestProject/Getdetails/" + $(obj).val(),
                type: "GET",
                async: false,
                success: function (data) {
                    //alert(JSON.stringify(data));
                    if (data) {
                        $("#RenNoOfLicense").val(data.NumberOfUsersPerLicense);
                        $("#datetimepicker3").val(data.StartDate);
                        $("#datetimepicker4").val(data.EndDate);
                    }
                },
                error: function () { alert("Failed!")}
            });
        }
        else {
            $("#RenNoOfLicense").val("");
            $("#datetimepicker3").val("");
            $("#datetimepicker4").val("");
        }
    }  

    function PopulateUsers() {
        var url = getURL();

        $.ajax({
            url: url + "TestProject/GetUsers/" + $("#UpdDrpCompanies").val(),
            type: "GET",
            async: false,
            success: function (data) {
                var dataSet = [];
                if ($.fn.DataTable.isDataTable('#UserDataTable')) {
                    $('#UserDataTable').DataTable().destroy();
                }
                for (var i = 0; i < data.length; i++) {
                    var arr = { "UserId": data[i].UserId, "FirstName": data[i].FirstName, "LastName": data[i].LastName, "Status": data[i].Status,"Company": data[i].Company };
                    dataSet.push({ "UserId": data[i].UserId, "fn": data[i].FirstName, "ln": data[i].LastName, "Status": data[i].Status, "Edit": "<button class='btn btn-primary btn-xs' data-title='Edit' data-toggle='modal' data-target='#edit' data ='" + JSON.stringify(arr) + "' onclick='popEdit(this)'><span class='glyphicon glyphicon-pencil'/></button>"/*, "Delete": "<button class='btn btn-danger btn-xs' data-title='Delete' data-toggle='modal' data-target='#delete' data = " + JSON.stringify(arr) + "onclick='popDelete(this)'><span class='glyphicon glyphicon-trash'/></button>"*/ });
                }
                var E2Etable = $('#UserDataTable').DataTable({
                    data: dataSet,
                    "ordering": false,
                    "paginate": true,
                    "lengthChange": false,
                    "filter": false,
                    "info": false,
                    "pageLength": 8,
                    "columns": [
                        { "data": "UserId" },
                        { "data": "fn" },
                        { "data": "ln" },
                        { "data": "Status" },
                        { "data": "Edit" },
                        //{ "data": "Delete" }
                    ],
                    rowId: "rowId"

                });
                $("#UserDataTable").show();
            },
            error: function () {alert("Failed!") }
        });

        
    }


    function popEdit(obj) {       
        var data = JSON.parse($(obj).attr("data"));
        $('#txtFirstName').val(data.FirstName);
        $('#txtLastName').val(data.LastName);
        $('#txtStatus').val(data.Status);
        $('#UpdateUserInfo').attr("userid", data.UserId);
        $('#UpdateUserInfo').attr("comp", data.Company);

        $('#EditUserInfo').modal({
            show: true,
            backdrop: 'static',
            keyboard: true
        });
    }

    function SaveUserInfo() {
        var url = getURL();        
        var LoginDetails = {
            "UserId": $('#UpdateUserInfo').attr("userid"),
            "Password": null,
            "Role": null,
            "FirstName": $('#txtFirstName').val(),
            "LastName": $('#txtLastName').val(),
            "Company": $('#UpdateUserInfo').attr("comp"),
            "Status": $('#txtStatus').val()
        }
        $.ajax({
            url: url + "TestProject/UpdateUser/",
            type: "POST",
            data: LoginDetails,
            async: false,
            success: function (data) {
                alert(data);
                PopulateUsers();
            },
            error: function () {
                alert("Failed");
            }
        });
    }

    $('.btn').click(function () {
        $('.pop').hide();
    })

    //function ValidateRenew(e) {
    //    if ($(obj).val() != "---Please Select---") {
    //        var url = getURL();
    //        $.ajax({
    //            url: url + "TestProject/Getdetails/" + $(obj).val(),
    //            type: "GET",
    //            async: false,
    //            success: function (data) {
    //                //alert(JSON.stringify(data));
    //                var lic = false;
    //                var stDt = false;
    //                var endDt = false;
    //                if (data.NumberOfUsersPerLicense != $("#RenNoOfLicense").val()) {
    //                    lic = true; 
    //                }
    //                else if (data.StartDate != $("#datetimepicker3").val()) {
    //                    stDt = true;
    //                }
    //                else if (data.EndDate != $("#datetimepicker4").val()) {
    //                    endDt = true;
    //                }
    //                if (lic && stDt && endDt) {
    //                    var r = confirm("You have changed the Number of Users,Start Date and End Date. Do you wish to renew?");
    //                    if (r == false) {
    //                        e.preventDefault();
    //                    }
    //                }
    //            },
    //            error: function () { }
    //        });
    //    }
    //    else {
    //        alert("Please Select a Company first!")
    //    }

    //}

</script>